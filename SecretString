local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Chixs Hub | Hoop Central 6',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main'),
    Custom = Window:AddTab('Custom Names'),
    Credits = Window:AddTab('Credits'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local GayBox = Tabs.Custom:AddLeftGroupbox('Custometics')
local SmokeBox = Tabs.Custom:AddRightGroupbox('Tags')

SmokeBox:AddToggle('MyToggle', {
    Text = 'YT Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.MyToggle:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].YT.Visible = Toggles.MyToggle.Value
end)

SmokeBox:AddToggle('LolToggle', {
    Text = 'SP Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.LolToggle:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].SP.Visible = Toggles.LolToggle.Value
end)

SmokeBox:AddToggle('Fuck', {
    Text = 'OW Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.Fuck:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].OW.Visible = Toggles.Fuck.Value
end)

SmokeBox:AddToggle('Mummm', {
    Text = 'MP Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.Mummm:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].MP.Visible = Toggles.Mummm.Value
end)

SmokeBox:AddToggle('Dorsss', {
    Text = 'MD Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.Dorsss:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].MD.Visible = Toggles.Dorsss.Value
end)

SmokeBox:AddToggle('HAHAHA', {
    Text = 'AS Tag',
    Default = false, -- Default value (true / false)
    Tooltip = 'This is Client Sided btw', -- Information shown when you hover over the toggle
})

Toggles.HAHAHA:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].AS.Visible = Toggles.HAHAHA.Value
end)


GayBox:AddInput('MyTextbox', {
    Default = '',
    Numeric = false, -- true / false, only allows numbers
    Finished = false, -- true / false, only calls callback when you press enter

    Text = 'Custom Name',
    Tooltip = 'Put Your text Here', -- Information shown when you hover over the textbox

    Placeholder = 'Type Your Custom Name', -- placeholder text when the box is empty
    -- MaxLength is also an option which is the max length of the text
})

Options.MyTextbox:OnChanged(function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = Options.MyTextbox.Value
end)

GayBox:AddDivider()

GayBox:AddLabel('Premade Custom Names')
local GayMotaPackersButton = GayBox:AddButton('[⭐] Gay Star', function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = ("[⭐] Gay Star")
end)

local ChixieUserButton = GayBox:AddButton('[👑] I Love Chixs Hub💗', function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = ("[👑] I Love Chixs Hub💗")
end)

local WtfButton = GayBox:AddButton('I Am Adopted', function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = ("I Am Adopted")
end)

local gaybroButton = GayBox:AddButton('Hypernova#0721 Is My Daddy🥵', function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = ("Hypernova#0721 Is My Daddy🥵")
end)

local DumbAssButton = GayBox:AddButton('Chixs Hub is Cool', function()
    game:GetService("Workspace").NameTags[game.Players.LocalPlayer.Name].PlayerName.Text = ("Chixs Hub is Cool")
end)

local LeftGroupBox2 = Tabs.Credits:AddLeftGroupbox('Credit')

LeftGroupBox2:AddLabel('Thanks to Hypernova#0721')
LeftGroupBox2:AddLabel('For Helping Me')
LeftGroupBox2:AddLabel('Also Chixs#9092')


local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Main Exploit')
local RightGroupBox = Tabs.Main:AddRightGroupbox('GrandBadge')
local LowerLeftGroupBox = Tabs.Main:AddLeftGroupbox('Player Exploit')


local MyButton3 = RightGroupBox:AddButton('Slasher', function()
    game:GetService("Players").LocalPlayer.PlayerGui.Grandbadges.SlasherGrandBadge.Enabled = true
    while true do
game:GetService("Players").LocalPlayer.Grand.Slasher.Value = true
wait(0.3)
end
end)

local MyButton4 = RightGroupBox:AddButton('Playmaker', function()
    game:GetService("Players").LocalPlayer.PlayerGui.Grandbadges.PlayGrandBadge.Enabled = true
    while true do
game:GetService("Players").LocalPlayer.Grand.Play.Value = true
wait(0.3)
end
end)

local MyButton5 = RightGroupBox:AddButton('Lockdown', function()
    game:GetService("Players").LocalPlayer.PlayerGui.Grandbadges.LockGrandBadge.Enabled = true
    while true do
game:GetService("Players").LocalPlayer.Grand.Lock.Value = true
wait(0.3)
end
end)

local MyButton6 = RightGroupBox:AddButton('Sharpshooter', function()
    game:GetService("Players").LocalPlayer.PlayerGui.Grandbadges.SharpGrandBadge.Enabled = true
    while true do
game:GetService("Players").LocalPlayer.Grand.Sharp.Value = true
wait(0.3)
end
end)

-- Tabboxes are a tiny bit different, but here's a basic example:
--[[

local TabBox = Tabs.Main:AddLeftTabbox() -- Add Tabbox on left side

local Tab1 = TabBox:AddTab('Tab 1')
local Tab2 = TabBox:AddTab('Tab 2')

-- You can now call AddToggle, etc on the tabs you added to the Tabbox
]]

-- Groupbox:AddToggle
-- Arguments: Index, Options
--[[LeftGroupBox:AddToggle('MyToggle', {
    Text = 'This is a toggle',
    Default = true, -- Default value (true / false)
    Tooltip = 'This is a tooltip', -- Information shown when you hover over the toggle
})


-- Fetching a toggle object for later use:
-- Toggles.MyToggle.Value

-- Toggles is a table added to getgenv() by the library
-- You index Toggles with the specified index, in this case it is 'MyToggle'
-- To get the state of the toggle you do toggle.Value

-- Calls the passed function when the toggle is updated
Toggles.MyToggle:OnChanged(function()
    -- here we get our toggle object & then get its value
    print('MyToggle changed to:', Toggles.MyToggle.Value)
end)

-- This should print to the console: "My toggle state changed! New value: false"
Toggles.MyToggle:SetValue(false)]]

-- Groupbox:AddButton
-- Arguments: Text, Callback

local MyButton = LeftGroupBox:AddButton('AutoTime', function()
    _G.Keybind = Enum.KeyCode.Q

-- Variables
local UIS = game:GetService("UserInputService")
local SHOOT = game:GetService("ReplicatedStorage").Remotes.server.shoot

local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

-- Function
UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == _G.Keybind and Character:FindFirstChild("Connect") then

        if Humanoid.MoveDirection.Magnitude > 0 then
            SHOOT:FireServer(true, "Idle", false)
            task.wait(0.5)
            SHOOT:FireServer(false, false)
        elseif Humanoid.MoveDirection.Magnitude == 0 then
            SHOOT:FireServer(true, "Idle", false)
            task.wait(0.4)
            SHOOT:FireServer(false, false)
        end

    end
end)
end)

-- Button:AddButton
-- Arguments: Text, Callback
-- Adds a sub button to the side of the main button

--[[local MyButton2 = MyButton:AddButton('Sub button', function()
    print('You clicked a sub button!')
end)]]

-- Button:AddTooltip
-- Arguments: ToolTip

MyButton:AddTooltip('Press Q to autotime')
--MyButton2:AddTooltip('This is a sub button')

-- NOTE: You can chain the button methods!
--[[
    EXAMPLE: 

    LeftGroupBox:AddButton('Kill all', Functions.KillAll):AddTooltip('This will kill everyone in the game!')
        :AddButton('Kick all', Functions.KickAll):AddTooltip('This will kick everyone in the game!')
]]

-- Groupbox:AddLabel
-- Arguments: Text, DoesWrap
--LeftGroupBox:AddLabel('If You Get Banned from the game its not my fault so use at your own risk')

-- Groupbox:AddDivider
-- Arguments: None
LeftGroupBox:AddDivider()

local ReallyButton = LeftGroupBox:AddButton('Hide Name', function()
    game:GetService("Workspace").NameTags:Destroy()
end)

local DoKnowButton = LeftGroupBox:AddButton('Boost FPS', function()
    game:GetService("Lighting").Bloom:Destroy()
    game:GetService("Lighting").Blur:Destroy()
    game:GetService("Lighting").SunRays:Destroy()
    game:GetService("Lighting").ColorCorrection:Destroy()
    game:GetService("Lighting").Atmosphere:Destroy()
    game:GetService("Lighting").DepthOfField:Destroy()
end)

DoKnowButton:AddTooltip('it might help to boost your FPS')

-- Groupbox:AddSlider
-- Arguments: Idx, Options
LowerLeftGroupBox:AddSlider('MySlider', {
    Text = 'WalkSpeed',

    -- Text, Default, Min, Max, Rounding must be specified.
    -- Rounding is the number of decimal places for precision.

    -- Example:
    -- Rounding 0 - 5
    -- Rounding 1 - 5.1
    -- Rounding 2 - 5.15
    -- Rounding 3 - 5.155

    Default = 14,
    Min = 14,
    Max = 18,
    Rounding = 0,

    Compact = false, -- If set to true, then it will hide the label
})

-- Options is a table added to getgenv() by the library
-- You index Options with the specified index, in this case it is 'MySlider'
-- To get the value of the slider you do slider.Value

local Number = Options.MySlider.Value
Options.MySlider:OnChanged(function(Value)
    
end)

-- This should print to the console: "MySlider was changed! New value: 3"
Options.MySlider:SetValue(3)

task.spawn(function()
    while true do
        wait(1)

        -- example for checking if a keybind is being pressed
        local state = Options.KeyPicker:GetState()
        if state then
            print('KeyPicker is being held down')
        end

        if Library.Unloaded then break end
    end
end)

local MyButton2 = LowerLeftGroupBox:AddButton('Shift Click TP', function()
    print("Shift Click TP: On")
    local player = game:GetService("Players").LocalPlayer
    local char = player.Character
    local mouse = player:GetMouse()
    local uis = game:GetService("UserInputService")
    
    local shifthold  = false
    
    mouse.Button1Down:Connect(function()
        if shifthold then
            char:MoveTo(mouse.Hit.p)
        end
    end)
    
    uis.InputBegan:Connect(function(input, process)
        if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
            shifthold = true
        end
    end)
    
    uis.InputEnded:Connect(function(input, process)
        if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
            shifthold = false
        end
    end)
end)

MyButton2:AddTooltip('Hold Shift and Click MB1 To TP')

LowerLeftGroupBox:AddDivider()

local GayBUtton = LowerLeftGroupBox:AddButton('LoopSpeed', function()
    while true do
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 18 --Walkspeed of your choice
        wait()
    end
end)

local MotherFuckers = LowerLeftGroupBox:AddButton('Cframe Speed Hack', function()
    down = false
velocity = Instance.new("BodyVelocity")
velocity.maxForce = Vector3.new(100000, 0, 100000)
---vv Use that to change the speed v
local speed = 150
gyro = Instance.new("BodyGyro")
gyro.maxTorque = Vector3.new(100000, 0, 100000)

local hum = game.Players.LocalPlayer.Character.Humanoid

function onButton1Down(mouse)
down = true
velocity.Parent = game.Players.LocalPlayer.Character.UpperTorso
velocity.velocity = (hum.MoveDirection) * speed
gyro.Parent = game.Players.LocalPlayer.Character.UpperTorso
while down do
if not down then break end
velocity.velocity = (hum.MoveDirection) * speed
local refpos = gyro.Parent.Position + (gyro.Parent.Position - workspace.CurrentCamera.CoordinateFrame.p).unit * 5
gyro.cframe = CFrame.new(gyro.Parent.Position, Vector3.new(refpos.x, gyro.Parent.Position.y, refpos.z))
wait(0.1)
end
end

function onButton1Up(mouse)
velocity.Parent = nil
gyro.Parent = nil
down = false
end
--To Change the key in those 2 lines, replace the "q" with your desired key
function onSelected(mouse)
mouse.KeyDown:connect(function(k) if k:lower()=="v"then onButton1Down(mouse)end end)
mouse.KeyUp:connect(function(k) if k:lower()=="v"then onButton1Up(mouse)end end)
end

onSelected(game.Players.LocalPlayer:GetMouse())
end)

MotherFuckers:AddTooltip('Hold V To Enable it')


-- Library functions
-- Sets the watermark visibility
Library:SetWatermarkVisibility(true)

-- Sets the watermark text
Library:SetWatermark('Chixs-Hub | Hoop Central 6')

Library.KeybindFrame.Visible = false; -- todo: add a function for this

Library:OnUnload(function()
    print('Unloaded!')
    Library.Unloaded = true
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')


-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightShift', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager. 
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings() 

-- Adds our MenuKeybind to the ignore list 
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 

-- use case for doing it this way: 
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('Chixs-Hub')
SaveManager:SetFolder('Chixs-Hub/specific-game')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings']) 

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config 
-- which has been marked to be one that auto loads!
